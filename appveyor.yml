version: 4.0.3.{build}
shallow_clone: true


environment:
  matrix:
    - tbs_arch: "x86"
      tbs_tools: "msvc12"
      tbs_static_runtime: 0
    
    - tbs_arch: "x64"
      tbs_tools: "msvc12"
      tbs_static_runtime: 0
    
    - tbs_arch: "x86"
      tbs_tools: "mingw"
      tbs_static_runtime: 1
    
    - tbs_arch: "x64"
      tbs_tools: "mingw"
      tbs_static_runtime: 1



install:
  - ps: if($env:build_platform -eq 'x64') {
          $env:vcvar_arg = 'x86_amd64';
        }
        else {
          $env:vcvar_arg = 'x86';
        }
  
  
  # get common functions
  - git clone https://github.com/imazen/gd-appveyor-helpers
  - ps: . .\gd-appveyor-helpers\appveyor_funcs.ps1
  
  
  # fetch deps
  
  - mkdir deps
  
  - nuget install zlib-%tbs_tools%-%tbs_arch%-master -Version 1.2.7.2 -Source https://ci.appveyor.com/nuget/zlib-shallow-x0n34b3pfq1b
  - ps: move zlib*\* deps -force
  - if [%tbs_tools%]==[mingw] move deps\libzlibstatic.a deps\libz.a
  - if [%tbs_tools%]==[msvc12] move deps\zlibstatic.lib deps\zlib.lib
  - SET tbsd_zlib_built=1
  - SET tbsd_zlib_incdir=deps
  - SET tbsd_zlib_libdir=deps
  
  - nuget install libjpeg-%tbs_tools%-%tbs_arch%-master -Version 1.3.43.57 -Source https://ci.appveyor.com/nuget/libjpeg-turbo-t70qw53csfhj
  - ps: move libjpeg*\* deps -force
  - if [%tbs_tools%]==[mingw] del deps\libjpeg.dll.a
  - if [%tbs_tools%]==[msvc12] move deps\jpeg_static.lib deps\jpeg.lib
  - SET tbsd_libjpeg_turbo_built=1
  - SET tbsd_libjpeg_turbo_incdir=deps
  - SET tbsd_libjpeg_turbo_libdir=deps
  
  
  # get mingw-w64 (C:\mingw64)
  - ps: if($env:tbs_tools -eq 'mingw' -and $env:tbs_arch -eq 'x64')
        {
          curl -outfile mw64.7z "http://libgd.blob.core.windows.net/mingw/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z";
          if((Get-FileHash mw64.7z -Algorithm SHA1).Hash -ne "91A35AE296C1A71802AB0C7228EE57F9AAC5D7C7")
          {
            echo "Invalid file hash";
            exit 1;
          };
          7z x -oC:\ mw64.7z | out-null;
        }



build_script:
  - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall" %vcvar_arg%'
  - if [%tbs_tools%]==[mingw] if [%tbs_arch%]==[x86] SET PATH=C:\MinGW\bin;%PATH%
  - if [%tbs_tools%]==[mingw] if [%tbs_arch%]==[x64] SET PATH=C:\mingw64\bin;%PATH%
  
  - SET zip=libtiff-%tbs_tools%-%tbs_arch%.zip
  - ps: $nupkg_b = "libtiff-$($env:tbs_tools)-$($env:tbs_arch)-$($env:APPVEYOR_REPO_BRANCH)";
  - ps: $nupkg_c = "libtiff-$($env:tbs_tools)-$($env:tbs_arch)-$($env:APPVEYOR_REPO_COMMIT)";
  
  - thumbs make
  - for /f "tokens=*" %%i in ('thumbs list') do set files=%%i
  - 7z a %zip% %files%
  - appveyor PushArtifact %zip%
  
  - ps: if(Test-Path $env:zip) {
          zip2nuget $env:zip $nupkg_b;
          zip2nuget $env:zip $nupkg_c; }



test_script:
  - SET fail=0
  - thumbs check || SET fail=1 & ver > nul
  - ps: Push-Ctest-Results 'build'
  - ps: Push-AppveyorArtifact build\Testing\Temporary\LastTest.log
  - exit %fail%

on_success:
  - ps: Push-AppveyorArtifact "$nupkg_b*.nupkg"
  - ps: Push-AppveyorArtifact "$nupkg_c*.nupkg"
