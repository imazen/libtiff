shallow_clone: true


environment:
  matrix:
    - build_platform: "x86"
      build_compiler: "msvc"
    
    - build_platform: "x64"
      build_compiler: "msvc"
    
    - build_platform: "x86"
      build_compiler: "mingw"
    
    - build_platform: "x64"
      build_compiler: "mingw"



install:
  - ps: if($env:build_platform -eq 'x64') {
          $env:vcvar_arg = 'x86_amd64';
        }
        else {
          $env:vcvar_arg = 'x86';
        }
  
  
  # get common functions
  - git clone https://github.com/imazen/gd-appveyor-helpers
  - ps: . .\gd-appveyor-helpers\appveyor_funcs.ps1
  
  # fetch deps
  - mkdir deps
  - nuget install zlib-%build_compiler%-%build_platform% -Source https://ci.appveyor.com/nuget/zlib-94hmpf3q011d
  - ps: move zlib*\* deps -force
  - nuget install libjpeg-%build_compiler%-%build_platform% -Source https://ci.appveyor.com/nuget/libjpeg-turbo-t70qw53csfhj
  - ps: move libjpeg*\* deps -force
  
  # get mingw-w64 (C:\mingw64)
  - ps: if($env:build_compiler -eq 'mingw' -and $env:build_platform -eq 'x64') {
      invoke 'curl' '-L -o mw64.7z "http://libgd.blob.core.windows.net/mingw/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z"';
      invoke '7z' 'x -oC:\ mw64.7z'; }
  
  # sh is breaking mingw builds; remove
  - for %%i in (sh.exe) do @del "%%~$PATH:i"



build_script:
  
  # build msvc
  
  - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall" %vcvar_arg%'
  
  - SET zip=libtiff-msvc12-%build_platform%.zip
  
  - if [%build_compiler%]==[msvc] (
      nmake /f makefile.vc &&
      7z a %zip% .\libtiff\libtiff.lib .\libtiff\libtiff_i.lib .\libtiff\libtiff.dll .\libtiff\tiff.h .\libtiff\tiffconf.h .\libtiff\tiffio.h .\libtiff\tiffvers.h &&
      appveyor PushArtifact %zip%
    )
  
  - ps: if(Test-Path $env:zip) { zip2nuget $env:zip "libtiff-$($env:build_compiler)-$($env:build_platform)" }
  
  
  
  # build mingw
  
  - if [%build_compiler%]==[mingw] if [%build_platform%]==[x86] SET PATH=C:\MinGW\bin;%PATH%
  - if [%build_compiler%]==[mingw] if [%build_platform%]==[x64] SET PATH=C:\mingw64\bin;%PATH%
  
  - SET zip=libtiff-mingw-%build_platform%.zip
  
  - if [%build_compiler%]==[mingw] (
      cmake
        -G "MinGW Makefiles"
        -DCMAKE_SHARED_LINKER_FLAGS=-static
        -DCMAKE_LIBRARY_PATH=deps
        -DCMAKE_INCLUDE_PATH=deps
        . &&
      mingw32-make &&
      7z a %zip%
        .\libtiff\libtiff.a
        .\libtiff\libtiff.dll
        .\libtiff\libtiff.dll.a
        .\libtiff\tiff.h
        .\headers\tif_config.h
        .\headers\tiffconf.h
        .\libtiff\tiffio.h
        .\libtiff\tiffvers.h &&
      appveyor PushArtifact %zip%
    )
  
  - ps: if(Test-Path $env:zip) { zip2nuget $env:zip "libtiff-$($env:build_compiler)-$($env:build_platform)" }



test_script:
  - SET fail=0
  - ctest -C Release || SET fail=1 & ver > nul
  - ps: Push-Ctest-Results '.'
  - ps: Push-AppveyorArtifact Testing\Temporary\LastTest.log
  - exit %fail%

on_success:
  - ps: Push-AppveyorArtifact *.nupkg
